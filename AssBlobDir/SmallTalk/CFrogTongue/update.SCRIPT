update ->CFrogNum |
  t=CFrogNum
  lerp=CFrogBlock
  tilex=CFrogNum
  tiley=CFrogNum 
  hit_block=CFrogNum
  dist=CFrogNum
  things=CFrogArray
  fx=CFrogNum
  fy=CFrogNum
  force=CFrogNum
  r*
  dist2=CFrogNum
  angle=CFrogNum
  from_tongue=CFrogNum
 |
  going_back ifTrue: [
    t _ ((CFrogTime now asSeconds - start_tS)   )  * speed + (3.14 / 2 ) .
  ] ifFalse: [
    t _ ((CFrogTime now asSeconds - start_tS)   )  * speed .
  ] .
  t > 3.14 ifTrue: [
    ^ 0 
  ] .
  lerp _ [:from=CFrogNum :to=CFrogNum |
    ((to - from ) * (t / 3.14 ) ) + from 
  ].
  t _ t sin  .
  fx _ from ->x .
  fy _ from ->y .
  angle _ target_x - fx arg: target_y - fy .
  dist _ ((target_x - fx) squared + (target_y - fy) squared ) sqrt * t .

  x _ (dist * angle cos ) + fx .
  y _ (dist * angle sin ) + fy .

  z _ lerp value: from ->z + .5  value: target_z .
  hit_block _ #world getTileAtX: x atY: y atZ: z .
  (hit_block and: going_back not) ifTrue: [
     start_tS _ CFrogTime now asSeconds .
     going_back _ 1 .
     target_x _ x .
     target_y _ y .
     target_z _ z .
     ^ 0 .
  ] .

  things _ #world thingsInDist: dist + .5 atAngle: angle fromThing: from .

  things do: [:t=C3DThing | 
    (t ~= from and: (hit has: t) not ) ifTrue: [
      (self hitsThing: t withRadius: .75 ) ifTrue: [
        dist2 _ ((t->x -x) squared + (t->y - y) squared )sqrt .
        hit add: t .
        going_back ifFalse: [
        going_back _ 1 .
          target_x _ t->x .
          target_y _ t->y .
          target_z _ z .
          start_tS _ CFrogTime now asSeconds .
        ] .
        angle _ from->x -  t->x arg: from->y - t->y .
        r _ CFrogRandom new .
'Throw the target towards the frog' .
        t damage: 10 + (r next * 7 ) from: from .
        force _ r next * 10 + dist2 / 30 .
        t addMomX: force * angle cos. 
        t addMomY: force * angle sin. 
        t addMomZ: .45 . 
        ^0 .
      ]
    ] .
  ].

  ^ 1

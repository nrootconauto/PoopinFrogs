addClient: sock=CNetStream ->C3DWorldClient
|
  c=C3DWorldClient
  p=CPlayer
  best=CFrogNum
  world_str=CFrogStr 
  buf=CFrogStr
  recur=CFrogBlock
|
  c _ C3DWorldClient basicNew .
  c -> player _ CPlayer new .
  'TODO place the player in a good spawn zone' .
  p _ c->player .
  p->x _ self width / 2 + .5 . 
  p->y _ self height / 2 + .5 .
  p->z _ 128 .
  best _ -127 .
  -127 to: 127 by: 1 do: [:h=CFrogNum |
    (self getTileAtX: p->x atY: p->y atZ: h) ifFalse: [
'Check for ground ' .
      (self getTileAtX: p->x atY: p->y  atZ: h - 1 ) ifTrue: [
        p->z _ h .
        best _ p->z max: best .
      ] .
    ]. 
  ] . 
  best = -127 ifTrue: [
  'Wut,nowhere to stand so place at top of world' .
    p->z _ 128 . 
  ] ifFalse: [
    p->z _ best .
  ] .
  self removeFromGrid: c->player.
  self updateThingPos: c->player.

  c->last_ping_tS _ CFrogTime now asSeconds .
  c->sock _ CAsyncStream newFromStream: sock .

  world_str _ blocks_string .
  c sendMessage: #((world_str) (blocks_width) (blocks_height))  withType: 'Wrld' .
  c sendMessage: #(
    (p->x)
    (p->y)
    (p->z)
    (p->angle)
  ) withType: 'PSpn' .

  c->last_response_tS _ CFrogTime now asSeconds .
  recur _[
    c->sock readU32WithCallback: [:sock* :cnt=CFrogNum|
      c->last_response_tS _ CFrogTime now asSeconds.
      c->sock readBytes: cnt withCallback: [:sock* :buf=CFrogStr|
        c->last_ping_tS _ CFrogTime now asSeconds .
        self handleMessage: buf forClient: c .
        'Re-enabled callback' .
        recur value 
      ] .
    ] .
  ] . 

  clients add: c .
  c->update _ [
  ].
  c armUpdates .
  recur value .

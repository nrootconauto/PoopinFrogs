handleMessage: m=CFrogStr forClient: c=C3DWorldClient 
->*
|
  type=CFrogStr
  array*
  p=CPlayer
  thing*
  x_pos=CFrogNum
  y_pos=CFrogNum
  z_pos=CFrogNum
  things=CFrogArray
  best_thing=C3DThing
  closest=CFrogBlock
  delegate=CFrogNum
  proj*
|
  delegate=0 .

  closest = [:x=CFrogNum :y=CFrogNum :z=CFrogNum|
    things _ self getThingsInRadius: 64 atX: x atY: y atZ: z .
    best_thing _ things first .
    things do:[:t=C3DThing|
      (t->x - x + t->y - y + ((t->z - z) *128)) <
      (best_thing->x - x + best_thing->y - y + ((best_thing->z - z) *128))
        ifTrue: [
         best_thing _ t .
      ].
    ].
    best_thing 
  ] .

  m size < 5 ifTrue: [
    c->sock close .
    ^ 0. .
  ] .
  type _ m copyFrom: 0 to: 4 .
  m _ m copyFrom: 5 to: m size .
  array _ m restoreThing .
  type = 'PBlk' ifTrue: [
    'Place block ' .
    'Use 0 for remove block' . 
    self setTile: array first
      atX: (array at: 1)
      atY: (array at: 2)
      atZ: (array at: 3) .
    delegate _ 1 .
  ] . 
  type = 'PThg' ifTrue:[
    'Place aThing'.
    thing _ (CFrogClass fromString: array first) new .
    thing ->x _ array at: 1 .
    thing ->y _ array at: 2 .
    thing ->z _ array at: 3 .
    self removeFromGrid: thing .
    self updateThingPos: thing .
    thing ->x show .
    thing ->y show .
    thing ->z show .
    thing show .
  ].
  type = 'PMov' ifTrue: [
    'Player move' show .
     p _ c->player .
     p->x show .
     p->y show .
     p->z show .
     self removeFromGrid: p .
     p->x _ array first .
     p->y _ array at: 1 .
     p->z _ array at: 2 .
     p->angle _ array at: 3 .
     self updateThingPos: p .
  ] .
  type = 'Damg' ifTrue: [
    'Damage Entity closest to point' .
    best_thing _ closest value: array first 
       value: (array at:1)
       value: (array at:2) .
    'damage' show .
    best_thing show .
    best_thing damage: array last from: c->player .
  ] .
  type = 'EBlC' ifTrue:[
    delegate _ 1 .
  ] .
  type = 'EBlW' ifTrue:[
    delegate _ 1 .
  ] .
  type = 'EBlF' ifTrue:[
    delegate _ 1 .
  ] .
  type = 'PkUp' ifTrue:[
     'Pickup item' .
    best_thing _ closest value: array first 
       value: (array at:1)
       value: (array at:2) .
    (best_thing hasClass:CPickup) ifTrue: [
      best_thing addToPlayer: c->player .
      self removeThing: best_thing .
    ] .
  ] . 

  type = 'Proj' ifTrue: [
    proj _ (array first ) new .
    proj->from_ c->player .
    proj->x _ array at: 1 .
    proj->y _ array at: 2 .
    proj->z _ array at: 3 .
    proj->momx _ array at: 4 .
    proj->momy _ array at: 5 .
    proj->momz _ array at: 6 .
  ] .


  delegate ifTrue: [
    clients do: [:c2=C3DWorldClient|
      c ~= c2 ifTrue: [
        c2 sendMessage: array withType: type .
      ].
    ] .
  ] .

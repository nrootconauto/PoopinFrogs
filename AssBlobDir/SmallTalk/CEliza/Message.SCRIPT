message: str=CFrogStr -> * |
  sub*
  reduce=CFrogBlock
  res*
  clone=CFrogArray
|
  reduce _ [:result* |
    (result hasClass: CFrogStr) ifTrue: [
      ^ result 
    ] .
    (result hasClass: CEliza) ifTrue: [
      stack remove result .
      stack add: result .
      ^ result getHello copy
    ] .
    (result hasClass: CFrogBlock) ifTrue: [
       result _ result value .
       (result hasClass: CFrogStr ) ifTrue: [
          ^ result
       ].
       (result hasClass: CFrogArray ) ifTrue: [
          sub _ CEliza makeResponsesFromArray: result .
          stack add: sub .
          ^ sub getHello copy
       ] .
    ] .
  ] .
  clone _ stack copy .
  stack size ifTrue: [
    0 to: stack size do: [:idx=CFrogNum|
      'Most recent are at end '.
      sub _ clone at: (clone size - 1 - idx)  .
      sub setSynonyms: self getSynonyms .
      res _ sub message0: str .
      reduce value: res .
    ]
  ] .
  res _ self message0: str .
  reduce value: res .
  ^ 0 
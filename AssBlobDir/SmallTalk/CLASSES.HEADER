#ifndef CI64Set 
extern class CI64Set;
#endif
class CFrogThing:CQue {
#define THINGF_TO_DELETE 1
#define THINGF_FRAME_TYPE 2
#define THINGF_GC_LOCK 4
#define THINGF_CALL_LOCK 8
#define THINGf_TO_DELETE 0
#define THINGf_GC_LOCK 2
#define THINGf_CALL_LOCK 3
  I32 thing_flags,shadow_ref_cnt;
  I32 id,ref_cnt;
  CCPU *owner_cpu;
  I32 lock_cnt,universe_class_idx;
//Used for garbage collection
  CFrogThing **_heap_hash_next;
};
class CNetStream:CFrogThing {
  I64 sock;
  U8 *destroy dft "NetStreamDel";
  Bool closed;
};
class CFrogThread:CFrogThing {
   CFrogBlock *blcok;
   CTask *task;
   U8 *destroy dft "ThreadDel";
}; 
class CAsyncStream:CFrogThing {
  CNetStream *sock;
  CFrogThread *thread;
  CFrogArray *ops;
  Bool closed;
};
class CFrogNum:CFrogThing {
  F64 num;
};
class CFrogUndefined:CFrogThing {
};
class CFrogClass:CFrogThing {
};
class CFrogChr:CFrogThing {
  U64 ch;
};
class CFrogBlock:CFrogThing {
  CFrogThing *self;
  CFrogThing *frame;
  U8 (*fun_ptr)(CFrogThing *self,U8 *);//CSTFrame
  CI64Set *byte_code;
  I64 arity;
};
class CFrogArray:CFrogThing {
  CI64Set *items;
  U8 *constructor dft "FrogArrayInit";
  U8 *destroy dft "FrogArrayDel";
};

class CFrogStr:CFrogThing {
  CU8Set *items;
  U8 *constructor dft "FrogStrInit";
  U8 *destroy dft "FrogStrDel";
};
class CFrogSymbol:CFrogThing {
  U8 name[STR_LEN];
  CFrogThing *value;
};
class CFrogError:CFrogThing {
};
class CFrogDivideError:CFrogError {
};

class CFrogTime:CFrogThing {
  CFrogNum *ts;
};
class CFrogRandom:CFrogThing {
//https://en.wikipedia.org/wiki/Linear_congruential_generator
  F64 mul,inc,mod,seed;
};
class CFrogBlobFile:CFrogThing {
  CFrogStr *filename;
};
class CFrogBin:CFrogThing {
  U8 *data;
  U8 *destroy dft "FrogBinDel";
};


class CFrogImg:CFrogThing {
  CDC *dc;
  CFrogStr *name;
  U8 *destroy dft "FrogImgDel";
  U8 *constructor dft "FrogImgBlank";
};
class CFrogDictionary:CFrogThing {
  U8 *destroy dft "FrogDictDel";
  U8 *constructor dft "FrogDictInit";
  CHashTable *t;
  CFrogArray *all; //for garbage collector
};

//
// See /UI.HC
//
class CUIEvent:CFrogThing {
  I64 m1,m2;
  I64 raw_type;
//'KeyUp'
//'KeyDown'
//'MsLUp'
//'MsRUp'
//'MsLDown'
//'MsRDown'
  CFrogStr * type;
};
class CUIElem:CFrogThing {
 //Negative means from side of parent/window
  I64 x,y;
  I64 sz_x,sz_y;
  F64 z; //Per -element
//x/y is where to draw the stuff
//These cordnates are realtive to the element
  CFrogBlock *ms_ldown;
  CFrogBlock *ms_lup;
  CFrogBlock *ms_rdown;
  CFrogBlock *ms_rup;
  CFrogBlock *kbd_up;
  CFrogBlock *kbd_down;
  CFrogBlock *drag_start;
  CFrogBlock *drag_end;
  CFrogBlock *ms_move;
  CFrogBlock *scroll;
  CFrogBlock *animate;
  CFrogArray *sub_elems;
//
  CFrogThing *user_data;
  I64 computed_x,computed_y;
  Bool dont_draw_children;
  Bool update_parent_first;
  Bool focus;
  Bool dont_draw,pad[4];
};
class CUIShell:CFrogThing {
  CUIElem *ui_root; //Will be stored in #ui_root
  CFrogStr *draw_it_name;
  CFrogBlock *on_refresh;
  CFrogBlock *on_init; //First thing run(used for repeat entry)
  CFrogBlock *on_event; //See CUIEvent,send eveents to #ui_root via sendEventToUI:
  Bool exited dft FALSE; //TRUE on exit
};
class CPoopidexShell:CUIShell {
};
class CUIChatLog:CUIElem {
  U8 *constructor dft "UIChatLogInit";
  U8 *draw_it dft "UIChatLogDraw";
  CFrogArray *lines;
  I64 max_cnt;
  U8 bg_color,fg_color;
};
class CUIBackground:CUIElem {
  U8 *draw_it dft "UIBackgroundDraw";
  U8 *constructor dft "UIElemInit";
  I64 bg_color;
};
class CUILabel:CUIElem {
  U8 *draw_it dft "UILabelDraw";
  U8 *constructor dft "UIElemInit";
  I64 color;
  CFrogStr *label;
};
class CUIIcon:CUIElem {
  U8 *draw_it dft "UIIconDraw";
  CFrogImg *img;
};

class CUIButton:CUIElem {
  U8 *draw_it dft "UIButtonDraw";
  U8 *constructor dft "UIButtonInit";  
  I64 fg_color;
  I64 bg_color;
  CFrogStr *label;
};
class CUIMeter:CUIElem {
  U8 *draw_it dft "UIMeterDraw";
  U8 *constructor dft "UIMeterInit";  
  I64 max,value;
  I64 bg_color;
  I64 fg_color;
  I64 text_color;
  I64 border_color;
  CFrogStr *str;
};
class CUITextBar:CUIElem {
  CFrogStr *buf;
  U8 *constructor dft "UITextBarInit";
  U8 *draw_it dft "UITextBarDraw";
  I64 view_pos,cur_pos;
  U8 bg_color,fg_color,border_color;
  CFrogBlock *on_enter;
  CFrogBlock *on_escape;
};
class CUIScrollBars:CUIElem {
  U8 *constructor dft "UIElemInit";
  U8 *draw_it dft "UIScrollBarsDraw";
  I64 x_scroll,y_scroll,bg_color;
};
class CUICenter:CUIElem {
  U8 *constructor dft "UIElemInit";
  U8 *draw_it dft "UICenterDraw";
  CUIElem *parent; 
  Bool x_center,y_center;
};

extern class CUIGrid;

class CUIGridItem:CUIElem {
  CFrogStr *name;
  CFrogImg *graphics;
  I64 cnt; //0 for none
  CUIGrid *parent;
  U8 *constructor dft "UIElemInit";
  U8 *draw_it dft "UIGridItemDraw";
  CFrogThing *item;
};

class CUIGrid:CUIElem {
  I64  grid_w,grid_h;
  CFrogArray *mat;
  CUIGridItem *active;
  U8 *constructor dft "UIElemInit";
  U8 *draw_it dft "UIGridDraw";
};


//
//See /3D.HC
//
class CTileTemplate:CFrogThing {
  I64 tile_idx;
  CFrogImg *floor_texture;
  CFrogImg *wall_texture;
  CFrogImg *ceil_texture;
};
class C2DPoint:CFrogThing {
  I64 x,y;
};
class C3DThingTemplate:CFrogThing {
  I64 flags;
  F64 radius;
  CFrogStr *name;
  CFrogImg *front;
  CFrogImg *side;
  CFrogImg *back;
};
extern class CEliza;
class C3DThing:CFrogThing {
  I64  server_id;
  CFrogClass *drop_thing; //CFrogClass
  C3DThingTemplate *template;
  F64 x,y,z,angle,health;
//Used for interoplation between server frames
  F64 server_old_x,server_old_y,server_old_z;
  F64 server_new_x,server_new_y,server_new_z;
  F64 interpolate_start_tS,interpolate_end_tS;
//
  F64 momx,momy,momz,animation_start_tS;
  F64 momx2,momy2,momz2;
//0->1 0 is full speed. 1 is completely stopped
  F64 friction; 
  CFrogStr *name; //Like Jimmy Crooks
  Bool no_draw,animation_no_repeat,pad[6];
//Private
  CFrogStr *template_name;
  CEliza *chat_bot;
  CFrogStr *chat_bot_name;
  I64 activate_tag;
//Private,See GetColorForRay/PrepareThingsForDraw
  CDC *draw_face no_serialize 1 ; //Private
  CD2 scrn_st,scrn_en; //Private
  CD3 draw_normal; //Private
  Bool no_fall_off_edge;
  Bool floating;
  Bool hit_thing; //Set by physics when we hit a thing
  Bool draw_flip;
  Bool no_update;
  Bool invisible;
  Bool pad[8-2];
};
class CDayNightStar:CFrogThing {
  I64 color;
  I64 radius;
  F64 rot1,rot2;
  //Private
  I64 screen_x,screen_y;
};
class CDayNight:CFrogThing {
  F64 start_tS;
  F64 day_length;
  I64 sky_color;
  CFrogArray *stars; //CDayNightStar
};
class C3DWorldManager:CFrogThing {
  I64 cur_tile_x;
  I64 cur_tile_y;
  I64 cur_tile_z;
  I64 cur_tile_side_x;
  I64 cur_tile_side_y;
  I64 cur_tile_side_z;
  CDayNight *day_night;
  CFrogArray *free_ids no_serialize 1;
  U8 *world_handle;
  CFrogArray *things recur_serialize 1;
//See CWallStain mofo
  CFrogArray *wall_stains no_serialize 1;
  CFrogArray *floor_stains no_serialize 1;
  CFrogDictionary *thing_templates recur_serialize 1;
  CFrogArray *tile_templates recur_serialize 1;
  F64 gravity,last_update;
  I64 screen_x,screen_y;
//A grid of things having the things(16*16 size)
  CFrogArray *grid;
  CFrogArray *stains_grid; //4*4 size has CWallStain's
  CFrogArray *doors_grid; //16*16
  CFrogArray *doors;
  CFrogArray *clients; //CAsyncStream
  CFrogArray *lines; //C3DLine
  CAsyncStream *server_sock;
  I64 is_client;
  I64 is_server;
  CTask *sound_task no_serialize 1;
  I64 is_paused;
//Private
  F64 game_load_tS;  //The CFrogTime now asSeconds that the game world is at when loaded
  CFrogThing *player;
  CFrogStr *blocks_string recur_serialize 1;
  I64 blocks_width,blocks_height;
};

class CHandItem:CFrogThing {
  CFrogImg *gr;
  I64 x,y;
  I64 xoff,yoff;
  I64 ammo,max_ammo;
  F64 timeout;
  F64 anim_start_tS;
  I64 anim_no_repeat;
  CUIGridItem *inventory_item;
  CFrogBlock *on_click;
//Private
  I64 grid_x,grid_y;
  Bool in_quick_inventory,is_equiped;
};

class CDoorItem:CHandItem {
  I64 height;
  I64 tag;
  I64 act_as_wall;
  F64 speed;
  F64 open_duration;
  Bool side_door,small_key,big_key;
};


class CWorldEditBlock:CHandItem {
  I64 tile_idx;
  I64 wall_size;
};

class CWorldEditThing:CHandItem {
  I64 tag;
  CFrogStr *name ;
};


class CFloorStain:CFrogThing {
  I64 tile_x,tile_y;
  F64 x,y;
  F64 center_x,center_y;
  I64 is_ceil;
  CDC *dc;
  U8 *destroy dft "FloorStainDel";
};
class CCeilStain:CFloorStain {
};

//Things like bullet holes or piss stains on the walls
extern class CDoor;
class CWallStain:CFrogThing {
  I64 tile_x,tile_y,tile_z;
//sidez==1 for top,sidez==0 for walls,sidez==-1 for floor
  I64 sidex,sidey,sidez;
  I64 added;
  F64 center_x,center_y;
 CDC *dc;
  CDoor *door;
  U8 *destroy dft "WallStainDel";
};
class CCeilWallStain:CFloorStain {
};

class CShellCasing:CFrogThing {
  F64 x,y;
  F64 momx,momy;
  F64 gravity;
  CFrogImg *dc;
};
//
// Eliza Chat Engine Section
//
class CElizaReasm:CFrogThing {
  CFrogArray *add_flags;
  CFrogArray *remove_flags;
  CFrogArray *need_flags;
  CFrogClass *give_item_class;
  I64 give_item_cnt;
  F64 freq;
  CFrogStr *goto_text;
  CFrogArray *parts;

//Used for not repeating responses(See CPlayer.quest_seen_responses)
  CFrogStr *global_response_name;

  CFrogStr *first_result;
  CFrogStr *again_result;
  CFrogBlock *is_valid_block;
  CFrogBlock *on_complete_block;
};
class CEliza:CFrogThing {
  CFrogDictionary *synonyms;
  F64 focus;
  CFrogStr *hello;
  CFrogStr *quit;
  CFrogArray *reasms; //CElizaReasm
  CFrogArray *cur_flags; //Just a CFrogStr
  CFrogArray *stack; 
};
//
// Game Section
//

//This [redacted for GH] is for picking up items in the world
class CPickup:C3DThing {
  CFrogClass *item_class;
  I64 count;
};

class CFrogDick:CHandItem {};
class CNumchucks:CHandItem {
  F64 attack_start_tS;
  F64 rate;
};

class CSmallKey:CHandItem {};
class CSmallKeyPickup:CPickup {};

class CBigKey:CHandItem {};
class CBigKeyPickup:CPickup{};

class C3DLine:CFrogThing {
  I32 color,thick;
  F64 oldx,oldy,oldz;
  F64 x0,y0,z0;
  F64 x,y,z;
  F64 momx,momy,momz;
};

class CPissLink:C3DLine {
  C3DThing *from no_serialize 1 ;
//True if x0,y0,z0 are the same as from->x/y/z
  I64 connected_to_thing;
};

class CLightningLink:CPissLink {
};
class CLightningBolt:CFrogThing {
  C3DThing *from;
  CFrogRandom *random_generator;
//CLighningLink
  CFrogArray *links recur_serialize 1;
  F64 next_remove_link_tS;
};
class CPissStream:CFrogThing {
  C3DThing *from no_serialize 1 ;
//CPissLink
  CFrogArray *links recur_serialize 1;
};

class CGun1Pickup:CPickup {
};
class CHealthPickup:CPickup {
  //See CMarkerDrug(the thing you get from this pickup)
};
class CShootgunPickup:CPickup {
};

class CFrogTongue:C3DLine {
  C3DThing *from no_serialize 1 ;
  F64 start_tS,speed;
  F64 target_x,target_y,target_z;
//if going_back is set,target_x/y/z is the hit location
  I64 going_back;
  CFrogArray *hit;
};

class CDogTongue:CFrogTongue {
};

class CGun1:CHandItem {
};
class CUzi:CHandItem {
  CFrogStr *state;
};
class CUziPickup:CPickup {
};
class CShootgun:CHandItem {
};
class CEnergyGun:CHandItem {
};
class CEnergyGunPickup:CPickup {
};
class CTalker:CHandItem {
  C3DThing *talking_to;
};
class CFrogNPC:C3DThing {
  CFrogRandom *random_generator;
  F64 speed;
  CFrogTongue *tongue;
//Who are we chasing/attacking
  C3DThing *target; //TODO
//The state varaible does things like move the frog around
// or run around if low health. It will attack if provoked
  F64 state_start_tS;
  F64 state_duration;
  I64 just_jumped;
  CFrogStr *state;
};
class CPorky:C3DThing {
  CFrogRandom *random_generator;
  F64 state_start_tS;
  F64 state_duration;
  I64 just_jumped;
  CFrogStr *state;
  C3DThing *target;
  CFrogTongue *tongue;
  I64 licked;
};
class CPooka:C3DThing {
};
class CPlayer:C3DThing {
  CFrogArray *seen_notifications; //Dont repeat notifications 
  CFrogThing *poopidex; //The players "computer"
  CFrogArray *items;
  CFrogArray *shell_casings;
  CUIMeter *health_meter no_serialize 1;
  CUIMeter *ammo_meter no_serialize 1;
  CUIGrid *quick_inventory;
  CUIGrid *main_inventory;
  CUIButton *open_inventory_button no_serialize 1;
  CUIChatLog *chat_log no_serialize 1;
  CUITextBar *chat_log_input no_serialize 1;
  CUILabel *message no_serialize 1;
  CUIBackground *save_load_menu no_serialize 1;
  CUIButton *load_game_button no_serialize 1;
  CUIButton *save_game_button no_serialize 1;
  F64 message_start_tS;
  I64 main_inventory_active;
  I64 chatting_active;
  union {
    I64 save_menu_active;
    I64 load_menu_active;
  };
  CPissStream *piss_stream recur_serialize 1;
  F64 last_x,last_y;
  CFrogArray *quest_flags recur_serialize 1;
  F64 angle2; // up/down angle
  CHandItem *want_hand_item;
//Has form "QuestName/Codename"
  CFrogArray *quest_seen_responses recur_serialize 1;
  CFrogArray *notifications;
}; 
class CPoopMan:C3DThing {
  CFrogRandom *random_generator;
  CFrogStr *state;
  F64 state_start_tS,speed;
  F64 state_duration;
  I64 steps_to_walk; //Before attack
  I64 just_jumped;
  I64 threw;
  C3DThing *target;
};

class CEggplantMan:C3DThing {
  CFrogRandom *random_generator;
  CFrogStr *state;
  C3DThing *left_hand;
  C3DThing *right_hand;
  C3DLine *left_arm;
  C3DLine *right_arm;
  //TODO hands
  F64 state_start_tS;
  I64 steps_to_walk; //Before attack
  I64 just_jumped;
  C3DThing *target;
};


class CAlien:C3DThing {
  CFrogRandom *random_generator;
  CFrogStr *state;
  F64 state_start_tS;
  F64 state_duration;
  I64 steps_to_walk; //BEfore attack
  I64 just_jumped;
  C3DThing *target;
};
class CZombie:C3DThing {
  CFrogRandom *random_generator;
  F64 speed;
  F64 state_start_tS;
  F64 state_duration;
  F64 next_piss_tS;
  CFrogStr *state;
 CPissStream *piss_stream recur_serialize 1;
  I64 just_jumped;
  C3DThing *target;
};
class CAssBird:C3DThing {
  CFrogRandom *random_generator;
  F64 speed;
  F64 state_start_tS;
  F64 state_duration;
  I64 steps_to_walk; //Before attack
  CFrogStr *state;
  C3DThing *target;
  CLightningBolt *lightning_bolt recur_serialize 1;
  I64 made_sound;
};
class CCyberPoop:C3DThing {
  CFrogRandom *random_generator;
  I64 steps_to_walk;
  F64 speed;
  F64 state_start_tS;
  F64 state_duration;
  CFrogStr *state;
  I64 just_jumped;
  C3DThing *target;
};
class CRocket:C3DThing {
  C3DThing *from;
};
class CPoopRocket:CRocket {
};
class CEnergyBall:CRocket {
};
class CRocketLauncher:CHandItem {
};
class CRocketLauncherPickup:CPickup {
};
class CShitItemPickup:CPickup {
};
class CShitItem:CHandItem {
};
class CWaterPickup:CPickup {
};
class CDoor:CFrogThing {
  F64 height,percent;
  F64 activated_at;
  F64 speed;
  F64 open_duration;
  I64 x,y,z,act_as_wall;
  I64 tag;
  CFrogArray *stains;
  Bool activated;
  Bool side_door,small_key,big_key;
};

class CKnife:CHandItem {
};

class CMarkerDrugItem:CHandItem {
  CFrogStr *state;
  F64 last_fire;
};
class CMarkerDrugPickup:CPickup {
};

class C3DWorldShell:CUIShell {
};

class CBlockEditShell:CUIShell {
};
class CThingEditShell:CUIShell {
};
class CDoorShell:CUIShell {
};

class CLandscapeGenerator:CFrogThing {
  CFrogArray *perlin_vectors;
  I64 w,h;
};


class C3DWorldClient:CFrogThing {
  CAsyncStream *sock;
  CPlayer *player;
//Use the update block to routinely update the client
  CFrogBlock *update;
  F64 next_update_tS;
  F64 last_ping_tS;
//Private
  F64 last_response_tS;
  CFrogThread *update_thread;
};
class C3DPoint:CFrogThing {
  F64 x,y,z;
};
//
// The in-game computer
//
class CPoopidexEntry:CFrogThing {
  CFrogStr *title;
  CFrogStr *text;
  CFrogImg *img;
};
class CPoopidex:CFrogThing {
  CFrogDictionary *categories; //CFrogArray(CPoopidexEntry)
  CUIElem *screen;
  I64 active;
};
//
// Composite UI elements
//
class CUITree:CUIElem {
  CFrogArray *sub_trees;
  CFrogArray *sub_elems2;
  CUITree *parent;
};
class CUIList:CUIElem {
};
//Will disappear after awhile
class CUINotification:CUIElem {
  F64 spawn_tS;
  CUIBackground *bg;
  CUILabel *label;
  CFrogStr *icon_name;
  CFrogStr *text;
//Private
  F64 anim_start_y;
};

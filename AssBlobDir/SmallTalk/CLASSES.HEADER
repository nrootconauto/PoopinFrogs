class CFrogThing:CQue {
#define SRV_THINGF_TO_DELETE 1
  I32 thing_flags,pad;
  I32 id,ref_cnt;
  U8 class_name[32];
  CCPU *owner_cpu;
  I64 lock_cnt;
};
class CFrogNum:CFrogThing {
  F64 num;
};
class CFrogUndefined:CFrogThing {
};
class CFrogClass:CFrogThing {
  U8 name[STR_LEN];
};
class CFrogChr:CFrogThing {
  U64 ch;
};
class CFrogBlock:CFrogThing {
  CFrogThing *self;
  CFrogThing *frame;
  U8 (*fun_ptr)(CFrogThing *self,U8 *);//CSTFrame
};
#ifndef CI64Set 
extern class CI64Set;
#endif
class CFrogArray:CFrogThing {
  CI64Set *items;
  U8 *constructor dft "FrogArrayInit";
  U8 *destroy dft "FrogArrayDel";
};


class CFrogDictionary:CFrogThing {
  CFrogThing *buckets;
  CFrogNum *size;
};
class CFrogStr:CFrogThing {
  CU8Set *items;
  U8 *constructor dft "FrogStrInit";
  U8 *destroy dft "FrogStrDel";
};
class CFrogSymbol:CFrogThing {
  U8 name[STR_LEN];
  CFrogThing *value;
//CU8Set and CI64Set are internally the same.
  U8 *constructor dft "FrogArrayInit";
  U8 *destroy dft "FrogArrayDel";
};
class CFrogError:CFrogThing {
};
class CFrogDivideError:CFrogError {
};

class CFrogTime:CFrogThing {
  CFrogNum *ts;
};

class CFrogRandom:CFrogThing {
//https://en.wikipedia.org/wiki/Linear_congruential_generator
  F64 mul,inc,mod,seed;
};
class CFrogBlobFile:CFrogThing {
  CFrogStr *filename;
};
class CFrogBin:CFrogThing {
  U8 *data;
  U8 *destroy dft "FrogBinDel";
};
//
// See /UI.HC
//

class CUIElem:CFrogThing {
 //Negative means from side of parent/window
  I64 x,y;
  I64 sz_x,sz_y;
//x/y is where to draw the stuff
//These cordnates are realtive to the element
  CFrogBlock *ms_ldown;
  CFrogBlock *ms_lup;
  CFrogBlock *ms_rdown;
  CFrogBlock *ms_rup;
  CFrogBlock *kbd_up;
  CFrogBlock *kbd_down;
  CFrogBlock *drag_start;
  CFrogBlock *drag_end;
  CFrogBlock *ms_move;
  CFrogArray *sub_elems;
//
  I64 computed_x,computed_y;
  Bool dont_draw_children;
  Bool update_parent_first;
  Bool focus;
  Bool dont_draw,pad[4];
};
class CUIChatLog:CUIElem {
  U8 *constructor dft "UIChatLogInit";
  U8 *draw_it dft "UIChatLogDraw";
  CFrogArray *lines;
  I64 max_cnt;
  U8 bg_color,fg_color;
};
class CUIBackground:CUIElem {
  U8 *draw_it dft "UIBackgroundDraw";
  U8 *constructor dft "UIElemInit";
  I64 bg_color;
};
class CUILabel:CUIElem {
  U8 *draw_it dft "UILabelDraw";
  U8 *constructor dft "UIElemInit";
  I64 color;
  CFrogStr *label;
};
class CUIButton:CUIElem {
  U8 *draw_it dft "UIButtonDraw";
  U8 *constructor dft "UIButtonInit";  
  I64 fg_color;
  I64 bg_color;
  CFrogStr *label;
};
class CUIMeter:CUIElem {
  U8 *draw_it dft "UIMeterDraw";
  U8 *constructor dft "UIMeterInit";  
  I64 max,value;
  I64 bg_color;
  I64 fg_color;
  I64 text_color;
  I64 border_color;
  CFrogStr *str;
};
class CUITextBar:CUIElem {
  CFrogStr *buf;
  U8 *constructor dft "UITextBarInit";
  U8 *draw_it dft "UITextBarDraw";
  I64 view_pos,cur_pos;
  U8 bg_color,fg_color,border_color;
  CFrogBlock *on_enter;
  CFrogBlock *on_escape;
};
class CUIScrollBars:CUIElem {
  U8 *constructor dft "UIElemInit";
  U8 *draw_it dft "UIScrollBarsDraw";
  I64 x_scroll,y_scroll,bg_color;
};
class CUICenter:CUIElem {
  U8 *constructor dft "UIElemInit";
  U8 *draw_it dft "UICenterDraw";
  CUIElem *parent; 
  Bool x_center,y_center;
};

class CUIGridItem:CUIElem {
  CFrogStr *name;
  CDC *graphics;
  I64 cnt; //0 for none
  CFrogThing *parent;
  U8 *constructor dft "UIElemInit";
  U8 *draw_it dft "UIGridItemDraw";
  CFrogThing *item;
};

class CUIGrid:CUIElem {
  I64  grid_w,grid_h;
  CFrogArray *mat;
  CUIGridItem *active;
  U8 *constructor dft "UIElemInit";
  U8 *draw_it dft "UIGridDraw";
};


//
//See /3D.HC
//
class C2DPoint:CFrogThing {
  I64 x,y;
};
class C3DThingTemplate:CFrogThing {
  I64 flags;
  CFrogStr *name;
  CDC *front;
  CDC *side;
  CDC *back;
  U8 *destroy dft "C3DThingTemplateDel";
};
class C3DThing:CFrogThing {
  C3DThingTemplate *template;
  F64 x,y,z,angle,health;
  F64 momx,momy,momz,animation_start_tS;
  F64 momx2,momy2;
  CFrogStr *name; //Like Jimmy Crooks
  Bool no_draw,animation_no_repeat,pad[6];
};
class C3DWorldManager:CFrogThing {
  U8 *world_handle;
  CFrogArray *things;
//See CWallStain mofo
  CFrogArray *wall_stains;
  CFrogArray *floor_stains;
  CFrogDictionary *thing_templates;
  CFrogDictionary *tile_templates;
  F64 gravity,last_update;
  I64 screen_x,screen_y;
//A grid of things having the things(128*128 size)
  CFrogArray *grid;
  CFrogArray *doors;
};

class CHandItem:CFrogThing {
  CDC *gr;
  U8 *destroy dft "HandItemDel";
  I64  x,y;
  I64  xoff,yoff;
  I64 ammo,max_ammo;
  F64 timeout;
  F64 anim_start_tS;
  I64 anim_no_repeat;
  CUIGridItem *inventory_item;
  CFrogBlock *on_click;
};

class CFloorStain:CFrogThing {
  I64 tile_x,tile_y;
  F64 x,y;
  F64 center_x,center_y;
  I64 is_ceil;
  CDC*dc;
  U8 *destroy dft "FloorStainDel";
};
class CCeilStain:CFloorStain {
};

//Things like bullet holes or piss stains on the walls
class CWallStain:CFrogThing {
  C2DPoint *tile;
  I64 side;
  F64 x,y;
  F64 center_x,center_y;
  I64 is_ceil_wall; //If hits the ceiling wall
 CDC *dc;
  U8 *destroy dft "WallStainDel";
};
class CCeilWallStain:CFloorStain {
};

class CShellCasing:CFrogThing {
  F64 x,y;
  F64 momx,momy;
  F64 gravity;
  CDC *dc;
  U8 *destroy dft "ShellCasingDel";
};
//
// Eliza Chat Engine Section
//
class CElizaReasm:CFrogThing {
  CFrogArray *add_flags;
  CFrogArray *remove_flags;
  CFrogArray *need_flags;
  F64 freq;
  CFrogStr *goto_text;
  CFrogArray *parts;
  CFrogStr *result;
  CFrogBlock *is_valid_block;
  CFrogBlock *on_complete_block;
};
class CEliza:CFrogThing {
  CFrogDictionary *synonyms;
  F64 focus;
  CFrogStr *hello;
  CFrogStr *quit;
  CFrogArray *reasms; //CElizaReasm
  CFrogArray *cur_flags; //Just a CFrogStr
  CFrogArray *stack; 
};
//
// Game Section
//
class CFrogDick:CHandItem {
};

class CPissLink:CFrogThing {
  C3DThing *from;
  F64 oldx,oldy,oldz;
  F64 x,y,z;
  F64 momx,momy,momz;
};
class CPissStream:CFrogThing {
  C3DThing *from;
//CPissLink
  CFrogArray *links;
};

//This [redacted for GH] is for picking up items in the world
class CPickup:C3DThing {
  CFrogClass *item_class;
  I64 count;
};
class CGun1Pickup:CPickup {
};
class CShootgunPickup:CPickup {
};

class CFrogTongue:CFrogThing {
  C3DThing *from;
  F64 start_tS;
  F64 x,y,z;
  F64 target_x,target_y,target_z;
};


class CGun1:CHandItem {
};
class CShootgun:CHandItem {
};
class CTalker:CHandItem {
  C3DThing *talking_to;
};
class CFrogNPC:C3DThing {
  CFrogRandom *random_generator;
  F64 speed;
  CFrogTongue *tongue;
//Who are we chasing/attacking
  C3DThing *target;
//The state varaible does things like move the frog around
// or run around if low health. It will attack if provoked
  F64 state_start_tS;
  F64 state_duration;
  I64 just_jumped;
  CFrogStr *state;
  CEliza *chat_bot;
};
class CPooka:C3DThing {
};
class CPlayer:C3DThing {
  CFrogArray *items;
  CFrogArray *shell_casings;
  CUIMeter *health_meter;
  CUIMeter *ammo_meter;
  CUIGrid *quick_inventory,*main_inventory;
  CUIButton *open_inventory_button;
  CUIChatLog *chat_log;
  CUITextBar *chat_log_input;
  I64 main_inventory_active;
  I64 chatting_active;
  CPissStream *piss_stream;
  F64 last_x,last_y;
//How many bloody footprints will be made
  F64 bloody_foot_count;
}; 
class CPoopMan:C3DThing {
  CFrogRandom *random_generator;
  CEliza *chat_bot;
  CFrogStr *state;
  F64 state_start_tS,speed;
  F64 state_duration;
  I64 just_jumped;
  I64 threw;
  C3DThing *target;  
};
class CZombie:C3DThing {
  CFrogRandom *random_generator;
  F64 speed;
  CEliza *chat_bot;
  F64 state_start_tS;
  F64 state_duration;
  F64 next_piss_tS;
  CFrogStr *state;
 CPissStream *piss_stream;
  I64 just_jumped;
  C3DThing *target;
};
class CRocket:C3DThing {
  C3DThing *from;
};
class CPoopRocket:CRocket {
};
class CRocketLauncher:CHandItem {
};
class CRocketLauncherPickup:CPickup {
};

class CWaterPickup:CPickup {
};
class CDoor:CFrogThing {
  F64 height,percent;
  F64 activated_at;
  F64 speed;
  F64 open_duration;
  I64 x,y,act_as_wall;
};
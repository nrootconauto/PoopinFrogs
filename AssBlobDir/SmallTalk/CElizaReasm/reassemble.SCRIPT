reassemble: wildcards=CFrogArray ->* |
  ret*
  cumsum=CFrogStr 
  replace=CFrogBlock 
  found_at=CFrogNum
  result*
  player=CPlayer
|
  freq _ freq + 1 .

  player _ #world getPlayer .
  result _ first_result . 
  (player->quest_seen_responses has: global_response_name) ifTrue: [
     result _ again_result .
  ] .
  result show .


  (result hasClass: CFrogArray ) ifTrue: [
    ret _ (result at: (result size * CFrogRandom new next rem: result size )).
  ] ifFalse: [
    ret _ result.
  ] .
  (ret hasClass: CEliza) ifTrue: [
    ^ ret 
  ] .
  ret _ ret copy .
  replace _ [:from=CFrogStr :with=CFrogStr |
    found_at _ (ret indexOf: from ) .
    found_at >= 0 ifTrue: [
      ret _ (ret copyFrom: 0 to: found_at ) , with , (
        ret copyFrom: found_at + from size to: ret size 
      )
    ]
  ].
  0 to: wildcards size do: [:idx* |
    cumsum _ '' .
    (wildcards at: idx) do:[:s=CFrogStr| 
      cumsum  size ifTrue: [
        cumsum _ cumsum , ' ' , s
      ]  ifFalse: [
        cumsum _ cumsum , s 
      ]
    ] . 
    replace
      value: ('(' ,  (idx + 1) printString , ')')
      value: cumsum
  ] .


  ^ ret

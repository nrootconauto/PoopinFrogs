update->* |
  w=C3DWorldManager
  p=CPlayer
  old_x=CFrogNum 
  old_y=CFrogNum 
  old_z=CFrogNum 
  hit_wall=CFrogNum
  tS=CFrogNum 
  rocket=CPoopRocket
  dist=CFrogNum
  pickup=CShitItemPickup
|
  tS _ CFrogTime now asSeconds.
  momx2 _ 0 .
  momy2 _ 0 .
  w _ #world .

  health <= 0 ifTrue: [
    state ~= 'Dead' ifTrue: [
      w sweepSoundForTime: 500 withMin: 50 withMax: 30 .
      momx2 _ 0 .
      momy2 _ 0 .
      pickup _ CShitItemPickup new .
      pickup -> x _ x .
      pickup -> y _ y .
      pickup -> z _ z .
      pickup -> template _ w getThingTemplate: 'CPoopMan/Dead' .
      state _ 'Dead' .
      self die .
      pickup -> animation_no_repeat _ 1 .
      pickup -> animation_start_tS _ tS .
    ]
  ] .

  state = 'Dead' ifTrue: [
    w removeThing: self .
    ^ 1
  ] .

  state = 'Normal' ifTrue: [
    steps_to_walk _  steps_to_walk - 1 .
    speed _ 70 / 10 *  3.4 .
    template _ w getThingTemplate: 'CPoopMan' .
    animation_no_repeat _ 0 .
    old_x _ x .
    old_y _ y .
    old_z _ z .

    (target hasClass: C3DThing) ifTrue: [
      (target->health <= 0) ifTrue: [
        p _ self lookForTarget .
        (self canSeeThing: p) ifTrue: [
          target _ p.
        ]
      ] .
    ] ifFalse: [
      p _ self lookForTarget .
      (self canSeeThing: p) ifTrue: [
        target _ p.
      ]
    ] .

    'Only walk around if target is defined'.
    (target hasClass:C3DThing) ifTrue: [
      self wander: speed withJumpVelocity: .55 withTarget: target .
      ((steps_to_walk <= 0 or: random_generator next < .2 ) and: (self canSeeThing: target)) ifTrue: [
        state _ 'Throw' .
        template _ w getThingTemplate: 'CPoopMan/Throw' .
        animation_no_repeat _ 1 .
        animation_start_tS _ tS.
        state_start_tS _  tS.
        state_duration _ 8 / 4 .
        angle _ (target->x - x) arg: (target->y - y) .
        threw _ 0 .
      ] .
    ] .
    steps_to_walk < 0 ifTrue: [
      steps_to_walk _ random_generator next * 10 * 3 .
    ] .
  ] .

  state = 'Throw' ifTrue: [
    ((tS - state_start_tS) > (6 / 4) and: threw not )ifTrue: [
      threw _ 1 .
      w noiseSoundForTime: 100 withMin: 30 withMax: 40 .
      rocket _ CPoopRocket new .
      rocket->from _ self . 
      rocket->x _ x . 
      rocket->y _ y . 
      rocket->z _ z + .5 .
      rocket -> angle _ (target->x - x arg: target->y - y ).
      angle _ rocket->angle .
      rocket->momx _ rocket->angle cos * 64 .
      rocket->momy _ rocket->angle sin * 64 .
      dist _ ((target->x - rocket->x) squared +(target->y - rocket->y)) sqrt .
      '64 is the throw force' .
      rocket->momz _ (target->z +.5 - rocket->z + ((random_generator next - .5 ) / 2 ) ) / dist * 64 .
    ] .
    (tS - state_start_tS) > state_duration ifTrue: [
      state _ 'Normal' .
      steps_to_walk _ random_generator next * 10 * 3 .
    ] .    
  ] .
 
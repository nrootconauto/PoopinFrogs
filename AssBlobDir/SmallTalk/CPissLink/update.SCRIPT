updateWithWeight: w=CFrogNum makeParticles: part=CFrogNum ->* |
  h=CFrogNum
  stain*
  ch=CFrogNum
  rise=CFrogNum
  around=CFrogArray 
  rand=CFrogRandom
  world=C3DWorld
|
  world _ #world .
  rand _ CFrogRandom new .
  oldx _ x .
  oldy _ y .
  oldz _ z .
  x _ x + (momx * w ) .
  y _ y + (momy * w ) .
  z _ z + (momz * w ) .
  momz _ momz - (world gravity / 3 * w ).


  'Try to piss on things and damage them' .
  around _ world getThingsInRadiusFromX: x fromY: y withRadius: 25 .
  around do: [:t* |
    (t ->health > 0 and: t ~= from ) ifTrue: [
      (z - t ->z) abs < 25 ifTrue: [
        1 to: 3 do:  [
          world newParticleAtX: x atY: y atZ: z withSpread: 8 withColor: #color_YELLOW
        ] .
        t damage: 3 * rand next + 2 from: from .
        ^ #(x y z)
      ] .
    ] .
  ] .

  'Use the old positions to ensure the entire piss stream in under the ground/wwal' .
  h _ world tileHeightAtX: oldx / 128 atY: oldy / 128 .
  ch _ world ceilHeightAtX: oldx / 128 atY: oldy / 128 .
  (h >= oldz and: part) ifTrue: [
    1 to: 3 do:  [
      world newParticleAtX: x atY: y atZ: h withSpread: 8 withColor: #color_YELLOW
    ] .
    'TODO wall stain '.
    (rand next < .2 ) ifTrue: [
      stain  _ CFloorStain new .
      stain setGraphics: 'GR/Dick/PISS_STAIN' atAngle: world getPlayer getAngle .
      stain putAtX: x atY: y .
      world addFloorStain: stain . 

      stain _ CWallStain new .
      stain setGraphics: 'GR/Dick/PISS_STAIN' .
      stain placeAtAngle: (momx arg: momy)
        fromX: oldx - momx 
        fromY: oldy - momy
        atHeight: oldz + z / 2. 
    ] .
    ^ #(x y z ) .
  ].
  (z >= ch) ifTrue: [
    rise _ world ceilRiseAtX: oldx / 128 atY: oldy / 128 .
    ((rise + ch) > z and: part) ifTrue: [
      stain  _ CCeilStain new .
      stain setGraphics: 'GR/Dick/PISS_STAIN' atAngle: world getPlayer getAngle .
      stain putAtX: x atY: y .
      world addFloorStain: stain . 

      stain _ CWallStain new .
      stain setGraphics: 'GR/Dick/PISS_STAIN' .
      stain placeAtAngle: (momx arg: momy)
        fromX: oldx - momx 
        fromY: oldy - momy
        atHeight: oldz + z / 2. 
      .   
      ^ #(x y z)
    ].
  ].
  (h >= oldz) ifTrue: [
    ^ #(x y z)
  ].
  (z >= ch) ifTrue: [
    rise _ world ceilRiseAtX: oldx / 128 atY: oldy / 128 .
    ((rise + ch) > z ) ifTrue: [
      ^ #(x y z)
    ] .
  ] .
  ^ 1.
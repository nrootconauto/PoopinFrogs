update ->*
|
  dist=CFrogNum
  w=C3DWorld
  r=CFrogNum
  now=CFrogNum
  rocket=CRocket
  hit_wall=CFrogNum
|
'Ask nroot to get off his ass and do this autoamticaly'. 
  momx2 _ 0 .
  momy2 _ 0 .
  w _ #world .
  now _ CFrogTime now asSeconds.

  health <= 0 ifTrue: [
    state = 'Dead' ifTrue: [
      ^ 0
    ].
    w sweepSoundForTime: 1000 withMin: 30 withMax: 20 .
    animation_start_tS _ CFrogTime now asSeconds .
    animation_no_repeat _ 1 .
      template _ w getThingTemplate: 'CCyberPoop/Dead'.
    state _ 'Dead' .
    self die .
    ^ 0 
  ] .

  state = 'PrepareFire' ifTrue: [
    angle _ (target->x - x) arg: (target->y - y) .
    now > (state_start_tS + 1.) ifTrue: [
      state _ 'Fire' .
      animation_no_repeat _ 0 .
      animation_start_tS _ now .
      template _ w getThingTemplate: 'CCyberPoop/Fire'.
      state_start_tS _ now .
    ] ifFalse: [
      ^ 1
    ].
  ].

  state = 'Fire' ifTrue: [
    now > (state_start_tS + .333) ifTrue: [
      w noiseSoundForTime: 300 withMin: 30 withMax: 40 .
      state_start_tS _ now .
      angle _ (target->x - x) arg: (target->y - y) .
      dist _ ((target->x - x) squared + (target->y - y) squared ) sqrt .
      -1 to: 2 do: [:o=CFrogNum | 
        rocket _ CRocket new .
        rocket->from _ self .
        rocket->x _ x .
        rocket->y _ y .
        rocket->z _ z + .5 .
        rocket->angle _ angle + (o * 3.13 / 3) .
        rocket->momx _ 10 * rocket->angle cos .
        rocket->momy _ 10 * rocket->angle sin .
        rocket->momz _ (target->z - rocket->z ) / dist * 10 . 
      ] .
      r _ random_generator next .  
      ((self canSeeThing: target) and: (r > .333))  ifTrue: [
        state _ 'Fire' . 
        ^ 1 .
      ] ifFalse: [
        state _ 'Chase' . 
      ] .
    ] ifFalse: [
      ^ 1 .
    ] .
  ].

  animation_no_repeat _ 0 .
  template _ w getThingTemplate: 'CCyberPoop'.

  (target hasClass: C3DThing) ifFalse: [
    target _ w getPlayer .
  ] .
  (state = 'Wait' and: target->health > 0) ifTrue: [
    (self canSeeThing: target) ifTrue: [
      state  _ 'Chase' .
      angle _ target->x - x arg: target->y - y .
    ] .
  ] .

  (target->health <= 0.) ifTrue: [
    state _ 'Wait'.
  ] .

  state = 'Chase' ifTrue: [
    r _ random_generator next .  
    r < (1 / 10 ) ifTrue: [
      state _ 'PrepareFire' .
      w sweepNoiseForTime: 1000 withMin: 50 withMax: 70 .
      angle _ (target->x - x) arg: (target->y - y) .
      template _ w getThingTemplate: 'CCyberPoop/Fire'.
      state_start_tS _ now .
      ^ 1 .
    ] .
  
    self wander: 10 withJumpVelocity: .60 withTarget: target .
  ] .

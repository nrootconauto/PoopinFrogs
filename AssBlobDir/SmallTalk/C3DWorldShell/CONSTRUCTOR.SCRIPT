init ->* |
  e*
  e2*
  handled=CFrogNum
  next_refresh=CFrogNum
  now=CFrogNum
  player=CPlayer
  up=CFrogNum
  down=CFrogNum
  left=CFrogNum
  right=CFrogNum
  idx=CFrogNum
  ldown=CFrogNum
  rdown=CFrogNum
  hand_animate_state=CFrogStr
  hand_animate_mom_x=CFrogNum
  hand_animate_mom_y=CFrogNum
  hand_animate_gravity=CFrogNum
  hand_animate_xoff=CFrogNum
  hand_animate_yoff=CFrogNum
  hand_active=CFrogNum
  xdiff=CFrogNum
  ydiff=CFrogNum
  ask_exit=CFrogBlock
  ask_exit_active=CFrogNum
  last_lighting_tS=CFrogNum
  notification=CUINotification
  poopidex_active=CFrogNum
|
  draw_it_name _ 'Draw3DWorld' .

  on_init _ [
    player _ #world getPlayer .
    (#ui_root2 hasClass: CUIElem ) ifFalse: [
      #ui_root2 _ CUIElem new .
      #ui_root2->sz_x _ 640 .
      #ui_root2->sz_y _ 480 .
    ] .


    #world unpause .
    #ms_grabbed _ 1 .
    poopidex_active _  0 .
    up _ 0 . 
    down _ 0 . 
    left _ 0 . 
    right _ 0 . 

    ldown _ 0 .
    rdown _ 0 .

    hand_animate_state _ 'Normal' .
    hand_animate_mom_x _ 0 .
    hand_animate_mom_y _ 0 .
    hand_animate_xoff _ 320 .
    hand_animate_yoff _ 300 .
    hand_animate_gravity _ 20 .
    hand_active _ 1 .
    ask_exit_active _ 0 .

    ask_exit _ [
      #ui_root removeChild: e. 
      
      (e hasClass: CUIElem ) ifTrue: [
       #ui_root removeChild: e .
       #ms_grabbed _ 1 .
       ask_exit_active _ 0 .
       e _ 0 .
       #world unpause
      ] ifFalse: [
        'Checks if client for us' .
        #world pause .

        e _ CUIBackground new .
        e->bg_color _ #color_DKGRAY .
        e2 _ CUIList new: #(
          #('Yes,fuck this poopy garbage' [
            #ui_root removeChild: e .
            exited _ 1 .
            #world unpause
          ]) 
          #('No,I like this shit(correct aswer)' [
            #ms_grabbed _ 1 .
            #ui_root removeChild: e .
            ask_exit_active _ 0 .
            'Diry hack,dont fire weapon on press ' .
            ldown _ 0 . 
            handled _ 1 .
            e _ 0 .
            #world unpause
          ]) 
        ) .
        e->sz_x _ e2->sz_x .
        e->sz_y _ e2->sz_y + 10 .
        e addChild: e2 .
        e2->y _ 10 .
        e2 _ CUILabel new .
        e2->color _ #color_LTCYAN .
        e2 setLabel:  'Quit the AssLicking Game?' .
         e2->y _ 2 .
        e2->x _ e->sz_x - e2->sz_x / 2 .
        e addChild: e2 .

        e ->x _ 320 - (e ->sz_x /2 ) .
        e ->y _ 240 - (e ->sz_y /2 ) .
        #ui_root addChild: e .
        #ms_grabbed _ 0 .
        ask_exit_active _ 1 .
        handled _ 1 .
      ] .
    ] .

    notification _ CUINotification new:'Press "T" for things menu' .
    notification setIcon: 'Icons/Button'.
    notification addToPoopidexCategory: 'Controls/Main' withDescription: 'Edit Things properies or add them to inventory'.
    notification _ CUINotification new:'Press "B" for Blocks Menu' .
    notification setIcon: 'Icons/Button' .
    notification addToPoopidexCategory: 'Controls/Main' withDescription: 'Edit/Add blocks to inventroy '.
  ] . 

  next_refresh _ CFrogTime now asSeconds .
  on_event _ [:v=CUIEvent |
     player _ #world getPlayer .
     handled _ 0 .
     v->type = 'MsLUp' ifTrue: [
       ldown _ 0 .
     ].
     v->type = 'MsRUp' ifTrue: [
       rdown _ 0 .
     ].
     v->type = 'MsLDown' ifTrue: [
       ldown _ 1 .
       #ms_grabbed ifTrue: [
         'Handled because we are firing rhe weaepon during refresh' .
         handled _ 1 .
       ] .
     ] .
     v->type = 'MsRDown' ifTrue: [
       rdown _ 1 .
       #ms_grabbed ifTrue: [
         'Handled because we are firing rhe weaepon during refresh' .
         handled _ 1 .
       ] .
     ] .
     v->type = 'KeyUp' ifTrue: [
       ('', v->m1 asCharactor) uppercase = 'P' ifTrue: [
         player->poopidex activate .
         handled _ 1 .
       ] .
       ('' ,v->m1 asCharactor) uppercase = 'W' ifTrue: [
         handled _ 1 .
         up _ 0 .
       ].
       ('', v->m1 asCharactor) uppercase = 'S' ifTrue: [
         handled _ 1 .
         down _ 0 .
       ].
       ('', v->m1 asCharactor) uppercase = 'A' ifTrue: [
         handled _ 1 .
         left  _ 0 .
       ].
       ('', v->m1 asCharactor) uppercase = 'D' ifTrue: [
         right _ 0 .
         handled _ 0 .
       ].
     ] .
     v->type = 'KeyDown' ifTrue: [
       'Tab' .
       v->m1 = 9 ifTrue: [
         handled _ 1 .
         player toggleMenu .
       ] .
       'CH_ESC' .
       v->m1 = 27 ifTrue: [
         handled _ 1 .
         ask_exit value .
       ] .
       'CH_SHIFT_ESC' .
       v->m1 = 28 ifTrue: [
         handled _ 1 .
         ask_exit value .
       ] .
       'Space '.
       v->m1 = 32 ifTrue: [
          player jump .
          handled _ 1 .
       ].

       idx _ 0 .
       '1234567890' do:[:c=CFrogChr | 
         v->m1 asCharactor = c ifTrue: [
           player selectQuickItemByNum:  idx .
           handled _ 1 .
         ] .
         idx _ idx + 1 .
       ] .
       
       ('' ,v->m1 asCharactor) uppercase = 'W' ifTrue: [
         handled _ 1 .
         up _ 1.
       ].
       ('', v->m1 asCharactor) uppercase = 'S' ifTrue: [
         handled _ 1 .
         down _ 1 .
       ].
       ('', v->m1 asCharactor) uppercase = 'A' ifTrue: [
         handled _ 1 .
         left  _ 1 .
       ].
       ('', v->m1 asCharactor) uppercase = 'D' ifTrue: [
         right _ 1 .
         handled _ 1 .
       ].

       'Block editor' .
       ('', v->m1 asCharactor) uppercase = 'B' ifTrue: [
         hand_active _ 0 .
         CBlockEditShell new run .
         hand_active _ 1 .
         handled _ 1 .
       ].

       'Thing editor' .
       ('', v->m1 asCharactor) uppercase = 'T' ifTrue: [
         hand_active _ 0 .
         CThingEditShell new run .
         hand_active _ 1 .
         handled _ 1 .
       ].
       
     ] .
     v->type = 'MsMove' ifTrue: [
       hand_animate_xoff _ v->m1 - (640 / 2 ) + hand_animate_xoff .
       hand_animate_yoff _ v->m2 - (480 / 2 ) + hand_animate_yoff .

       #ms_grabbed ifTrue: [
         player -> angle _ player->angle + ((v->m1 - (640 / 2) ) * (3.14 / 30 / 7 )) .
         player -> angle2 _ player -> angle2 + ((v -> m2 - (480 / 2) ) * (3.14 / 30 / 7 )) .
         player -> angle2 _ player -> angle2 min: 3.14 / 2 .
         player -> angle2 _ player -> angle2 max: -3.14 / 2 .
         handled _ 1 .
       ].
     ] .
     v->type = 'MsScroll' ifTrue: [
       #ms_grabbed ifTrue: [
         player selectNextItemByOffset: v->m1 .
         handled _ 1 .
       ].
     ] .

     handled ifFalse: [
       #ui_root sendEventToUI: v .
     ] .
  ] .
  on_refresh _ [
     player _ #world getPlayer .
     last_lighting_tS < CFrogTime now asSeconds ifTrue: [
       last_lighting_tS _ CFrogTime now asSeconds  + 1 .
       #world lighting .
     ] .
     #world ->is_paused ifFalse: [
       now _ CFrogTime now asSeconds .
       now >= next_refresh ifTrue: [
         next_refresh _ now + (1 / 5 ).
         #world update
       ] .
       player->momx2 _ 0 .
       player->momy2 _ 0 .
       player->momz2 _ 0 .
       (#world tileIsLiquidAtX: player->x /128 atY: player->y /128  atZ: player->z) ifTrue: [
         up ifTrue: [
           player swim: 128 /4 atAngle: player->angle atAngle2: player->angle2 negated .
         ] .
         down ifTrue: [
           player swim: 128 /4 atAngle: player->angle atAngle2: player->angle2  negated + 3.14 .
         ] .
         left ifTrue: [
           player swim: 128 /4 atAngle: player->angle - (3.14 / 2) atAngle2: player->angle2 negated.
         ] .
         right ifTrue: [
           player swim: 128 /4 atAngle: player->angle + (3.14 / 2) atAngle2: player->angle2 negated.
         ] .
       ] ifFalse: [
         up ifTrue: [
           player move: 128 / 4 atAngle: player->angle .
         ] .
         down ifTrue: [
           player move: 128 / 4 atAngle: player->angle  +  3.14  .
         ] .
         left ifTrue: [
           player move: 128 / 4 atAngle: player->angle  - (3.14 / 2 ) .
         ] .
         right ifTrue: [
           player move: 128 / 4 atAngle: player->angle  + (3.14 / 2 ) .
         ] .
       ].
       #world animate. 
       #world handlePowerups .
       #ms_grabbed ifTrue: [
         ldown ifTrue: [
           #hand_item fire .
         ] .
         rdown ifTrue: [
           #hand_item altFire .
         ] .
       ] .
       #hand_item animate .
       #world physics .

       (hand_active and: ((
          player->main_inventory_active or:
          player->chatting_active
        ) or: ask_exit_active) not) ifTrue: [
         #ms_grabbed _ 1 .
         'Hand item movement'.
         hand_animate_xoff < 100 ifTrue: [
           hand_animate_xoff _ 100 .
         ].       
         hand_animate_xoff > 540 ifTrue: [
           hand_animate_xoff _ 540 .
         ].       
         hand_animate_yoff < 300 ifTrue: [
           hand_animate_yoff _ 300 .
         ].       
         hand_animate_yoff > 450 ifTrue: [
           hand_animate_yoff _ 450 .
         ].
         'base position' .
         #hand_item->x _ 320 . 
         #hand_item->xoff _ hand_animate_xoff - #hand_item->x .
         #hand_item->yoff _ hand_animate_yoff - #hand_item->y .

         xdiff _ #hand_item->x - hand_animate_xoff .
         ydiff _ #hand_item->y - hand_animate_yoff .
         xdiff abs < hand_animate_gravity ifTrue: [
           hand_animate_xoff _ #hand_item -> x .
         ] ifFalse: [
           hand_animate_xoff _ (xdiff sign * hand_animate_gravity) + hand_animate_xoff.
         ] .
         ydiff abs < hand_animate_gravity ifTrue: [
           hand_animate_yoff _ #hand_item -> y .
         ] ifFalse: [
           hand_animate_yoff _ (ydiff sign * hand_animate_gravity) + hand_animate_yoff.
         ] .
       ] ifFalse: [
         #ms_grabbed _ 0 .
         hand_animate_xoff _ #hand_item->x .
         hand_animate_yoff _ #hand_item->y .
       ]
     ] .
  ] .
  ^ self 
receiveThings: data* ->*
|
  have=CFrogArray
  w=C3DWorldManager
  me=CPlayer
  thing=C3DThing
  now=CFrogNum
  use_raw=CFrogNum
  new=CFrogArray
|
  w _ #world .
  me _ w getPlayer .
  w->things do:[:t*|
    t ~= me ifTrue: [
      w removeFromGrid: t .
    ]
  ] .

'data size showq '.
  data size show .


  now  _ CFrogTime now asSeconds .

  use_raw _ 0 .
  (now - #old_interpolation_tS) > 1.5 ifTrue: [
    #old_interpolation_tS _ now .
    use_raw _ 1 .
  ] .

  new _ #() .

  'Data isnt the whole picture'.
  'It has format ' .
  '#( x y z angle CFrogClass "Templatename" momx momy momz) ' .
  'Player is not included in things' .
  data do:[:entry=CFrogArray|
    thing _ (entry at:4) basicNew .

    thing->interpolate_start_tS  _ #old_interpolation_tS .
    thing->interpolate_end_tS  _ now .

    thing->server_old_x _ entry at: 6 . 
    thing->server_old_y _ entry at: 7 .  
    thing->server_old_z _ entry at: 8 .
    thing->server_new_x _ entry at: 0 . 
    thing->server_new_y _ entry at: 1 . 
    thing->server_new_z _ entry at: 2 . 
  
    thing->x _ thing->server_old_x .
    thing->y _ thing->server_old_y .
    thing->z _ thing->server_old_z .
    
    thing->angle _ entry at: 3 .
    thing->template _ #world getThingTemplate: (entry at:5) .

    thing->health _ entry at: 9 .
    thing->animation_no_repeat _ entry at: 10 .
    thing->animation_start_tS _ (entry at: 11) + now .
    thing->server_id _ entry at: 12 .

    w updateThingPos: thing .

    new add: thing .
  ] .

  new add: player .
  w->things _ new .

  #old_interpolation_tS _  now .
  
fireProjectile: type* withSpeed: speed=CFrogNum
  ->*
|
  canidates=CFrogArray
  hit=C3DThing
  best_dist=CFrogNum
  best=C3DThing
  best_angle=CFrogNum
  dist=CFrogNum
  rocket*
  targetz=CFrogNum
  angle2=CFrogNum
|
  canidates _ #world thingsInDist: 128 * 32 atAngle: angle fromThing: self .
  best_angle _ 3.14 / 6 .
  best _ 0 .
  canidates do: [:t=C3DThing |
    ((self ~= t and: t ->health > 0. ) and: (self canSeeThing: t )) ifTrue: [
      angle2 _ self angleFromThing: t facingAngle: angle .
      angle2 < best_angle ifTrue: [
        best_angle _ angle2  .
        best _ t          
      ]
    ]
  ] .
  angle2 _ angle .
  targetz _ z +.5 .
  dist _ 10000 squared .
  (best hasClass: C3DThing) ifTrue: [
    angle2 _ best->x - x arg: best->y - y .
    targetz _ best->z +.5 .
    dist _ ((best->x - x) squared + (best->y - y) squared) sqrt .
  ] .


  rocket _ type new .
  rocket ->from _ self .
  rocket ->x _ x + (32 * angle2 cos).
  rocket ->y _ y + (32 * angle2 sin).
  rocket ->z _ z + .5  .
  rocket ->angle _ angle2 .
  rocket->momx _ speed * angle2 cos .
  rocket->momy _ speed * angle2 sin .
  rocket->momz _ (targetz  - rocket ->z ) / dist sqrt * speed .

  #world ->is_client ifTrue: [
    #client shootProjectile: type 
      atX: rocket->x 
      atY: rocket->y 
      atZ: rocket->z
      withMomX: rocket->momx
      withMomY: rocket->momy
      withMomZ: rocket->momz .
  ].

  ^ rocket .
fireProjectile: type* withSpeed: speed=CFrogNum
  ->*
|
  canidates=CFrogArray
  hit=C3DThing
  best_dist=CFrogNum
  best=C3DThing
  dist=CFrogNum
  rocket*
  targetz=CFrogNum
  angle2=CFrogNum
|
  canidates _ #world thingsInDist: 128 * 64 atAngle: angle fromThing: self .
  best_dist _ 16000 squared .
  best _ 0 .
  canidates do: [:t=C3DThing |
    (self ~= t and: t ->health > 0. ) ifTrue: [
      dist _ (t ->x - x ) squared + (t ->y - y ) squared .
      dist < best_dist ifTrue: [
        best_dist _ dist .
        best _ t          
      ]
    ]
  ] .
  angle2 _ angle .
  targetz _ z +.5 .
  (best hasClass: C3DThing) ifTrue: [
    angle2 _ best->x - x arg: best->y - y .
    targetz _ best->z .
  ] .

  rocket _ type new .
  rocket ->from _ self .
  rocket ->x _ x + (32* angle2 cos).
  rocket ->y _ y + (32* angle2 sin).
  rocket ->z _ z + .5  .
  rocket ->angle _ angle2 .
  rocket->momx _ speed * angle2 cos .
  rocket->momy _ speed * angle2 sin .
  rocket->momz _ (targetz  - rocket ->z ) / best_dist sqrt * speed .
  ^ rocket .
updateGrab->CFrogNum
|
  normal=CFrogNum
  tx=CFrogNum
  ty=CFrogNum
  tz=CFrogNum
  target_d=CFrogNum
  d=CFrogNum
  a=CFrogNum
  a2=CFrogNum
  rel_tS=CFrogNum
  w=C3DWorldManager
  final=CFrogBlock
  thrust_speed=CFrogNum
  hit_thing=CFrogBlock
  thing=C3DThing
|
  #world removeThing: left_hand .
  #world removeThing: right_hand .


  hit_thing _ [:target=C3DThing|
   'We successfully? grabbed the target' .
    state _ 'Grab3' .
    state_start_tS _ CFrogTime now asSeconds .

    'Damage the target' .
    target damage: 25 from:self .
    'Thrust target towards self' .
    a _ a + 3.14 .
    thrust_speed _ random_generator next * 5 * 128 + 256 / 15  .
    target->momx _ target->momx + (thrust_speed * a2 cos abs * a cos ) . 
    target->momy _ target->momy + (thrust_speed * a2 cos abs * a sin ) . 
    target->momz _ target->momz + (thrust_speed * a2 sin / 128) + .6 . 
  ] .
  final _ [
    normal _ angle + (3.14 / 2) .

    left_arm  _ C3DLine new .
    left_arm->thick _ 8 .
    left_arm->color _ #color_PURPLE .

    left_arm->x0 _ x + (32 * normal cos) .
    left_arm->y0 _ y + (32 * normal sin) .
    left_arm->z0 _ z + .5 . 
    left_arm->x _ tx + (32*normal cos ) .
    left_arm->y _ ty + (32*normal sin ) .
    left_arm->z _ tz .

    normal _ angle - (3.14 / 2) .

    right_arm  _ C3DLine new .
    right_arm->thick _ 8 .
    right_arm->color _ #color_PURPLE .

    right_arm->x0 _ x + (32 * normal cos) .
    right_arm->y0 _ y + (32 * normal sin) .
    right_arm->z0 _ z + .5 . 
    right_arm->x _ tx + (32*normal cos ) .
    right_arm->y _ ty + (32*normal sin ) .
    right_arm->z _ tz .

    right_hand _ C3DThing new.
    right_hand->template _ #world getThingTemplate: 'CEggplantMan/Hand' .
    right_hand->x _ right_arm->x .
    right_hand->y _ right_arm->y .
    right_hand->z _ right_arm->z .
    right_hand->floating _ 1 .
    right_hand->angle _ angle .

    left_hand _ C3DThing new.
    left_hand->template _ #world getThingTemplate: 'CEggplantMan/Hand' .
    left_hand->x _ left_arm->x .
    left_hand->y _ left_arm->y .
    left_hand->z _ left_arm->z .
    left_hand->floating _ 1 .
    left_hand->angle _ angle .

  ].

  w _ #world .

  rel_tS _ CFrogTime now asSeconds  - state_start_tS .

  state = 'Grab' ifTrue: [
    target_d _ ((target->x - x / 128 ) squared + (target->y - y / 128 ) squared) sqrt.
    d _ target_d min: rel_tS * 6  .
    a _ target->x - x arg: target->y - y .
    a2 _ target_d arg: (target->z - z). 
    tx _ d * a cos * 128 + x .
    ty _ d * a sin * 128 + y .
    tz _ d / target_d * (target->z - z ) + z + .5 .
    angle _ a .

    thing _ self grabbedThing .
    (thing hasClass: C3DThing) ifTrue: [
      hit_thing value: thing .
      ^ 1 .
    ] .

    final value .

    d >= target_d ifTrue: [
      (target hasClass: C3DThing) ifTrue: [
        hit_thing value: target.
      ] .
      state _ 'Grab3' .
      state_start_tS _ CFrogTime now asSeconds .
    ] .

    (self canSeeThing: target ) ifFalse: [
      'Cant see go back' .
      state _ 'Grab3' .
      state_start_tS _ CFrogTime now asSeconds .
    ] .

    (w getTileAtX: tx / 128 atY: ty / 128 atZ: tz ) ifTrue: [
      'Hit a wall ' .
      state _ 'Grab3' .
      state_start_tS _ CFrogTime now asSeconds .
    ] .
    ^ 1 .
  ] .


  state = 'Grab3' ifTrue: [
    'Return Arms to eggplant man' .

    tx _ left_arm->x + right_arm->x / 2 . 
    ty _ left_arm->y + right_arm->y / 2 . 
    tz _ left_arm->z + right_arm->z / 2 . 
    angle _ tx - x arg: ty - y .

    target_d _ ((tx - x / 128) squared + (ty - y /128) squared + (tz - z - .5 ) squared ) sqrt .

    d _ target_d - (10 / 30 ) max: 0.1 .

    tx _ (tx - x) * (d / target_d ) + x .
    ty _ (ty - y) * (d / target_d ) + y .
    tz _ (tz - z - .5 ) * (d / target_d ) + z + .5 .

    d <= 0.11 ifTrue: [
      left_arm _ 0 .
      right_arm _ 0 .
      left_hand _ 0 .
      right_hand _ 0 .
      state _ 'Normal' .
      ^ 0 .
    ] .

    final value .
    ^ 1 .
  ] .



  left_arm _ 0 .
  right_arm _ 0 .
  left_hand _ 0 .
  right_hand _ 0 .

  ^ 0 .
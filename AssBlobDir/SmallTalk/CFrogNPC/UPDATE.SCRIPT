update ->* |
  hit_wall=CFrogNum
  new_t=C3DThingTemplate
  ts=CFrogNum
  old_x=CFrogNum
  old_y=CFrogNum
  old_z=CFrogNum
|
  momx2 _ 0 .
  momy2 _ 0 .
  health <= 0 ifTrue: [
    new_t _ #world getThingTemplate: 'CFrogNPC/DEAD' .
    new_t ~= template ifTrue: [
      self dropItem .
      animation_start_tS _ CFrogTime now asSeconds .
      animation_no_repeat _ 1 .
      template _  new_t .
      tongue _ 0 .
    ] .
    ^ 1 .
  ] .

  ts _ CFrogTime now asSeconds .
  (ts - state_start_tS ) > state_duration ifTrue: [
    'stay angry until the target is out of view' .
    (state = 'Angry' and: (self canSeeThing: target )) ifTrue: [
      ^ 1 .
    ] .
    state _ 'Normal' .
  ].

  (tongue hasClass: CFrogTongue) ifTrue: [
    tongue update ifFalse: [
      tongue _ 0 
    ]
    ^ 1 
  ]  ifFalse: [
    state = 'Angry' ifTrue: [
      'Try to eat the player' .
      speed _ 64 / 30 * 3.5 .
      (random_generator next  < ( 2 / 10 ) and: (self canSeeThing: target)) ifTrue: [
        tongue _ CFrogTongue new .
        'eat 'show .
        tongue eatTarget: target fromFrog: self .
        'Populate with values' .
        animation_start_tS _ CFrogTime now asSeconds .
        animation_no_repeat _ 1 .
        template _ #world getThingTemplate: 'CFrogNPC/TONGUE' .
        tongue update.
        ^ 1 
      ]
    ].
  ] .

  state = 'Normal' ifTrue: [
     speed _ 64 / 30  * 2 . 
  ] .  

  state = 'Flee' ifTrue: [
    speed _ 64 / 30 * 5 .
    'Run away from target or in random direction'.
    (random_generator next < (1.5 / 10) ) ifTrue: [
       random_generator next < .5 ifTrue: [
         angle _ target angleBetween: self
       ] ifFalse: [
         angle _ (6.28 * random_generator next )
       ]
    ] .
  ] .

  'Walk around ' .

  template _ #world getThingTemplate: 'CFrogNPC' .
  animation_no_repeat _ 0 .
  old_x _ x .
  old_y _ y .
  old_z _ z .

  self wander: speed withJumpVelocity: .6 withTarget: target .

  'Jump Randomly' .

  z = (#world tileHeightAtX: x / 128 atY: y / 128 ) ifTrue: [
    (random_generator next < (.9 / 10) and: self isOnGround) ifTrue: [
      momz _ #world gravity * 3 .
      just_jumped _ 1 .
    ]
  ] .
  
  self isOnGround ifTrue: [
    just_jumped _ 0
  ]
